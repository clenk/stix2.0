import unittest
import json
from . import SCHEMA_DIR
from .. import ValidationOptions, validate_string

VALID_MALWARE = """
{
  "type": "malware",
  "id": "malware--0c7b5b88-8ff7-4a4d-aa9d-feb398cd0061",
  "created": "2016-05-12T08:17:27.000000Z",
  "modified": "2016-05-12T08:17:27.000000Z",
  "version": 1,
  "name": "Cryptolocker",
  "description": "...",
  "labels": ["ransomware"]
}
"""


class MalwareTestCases(unittest.TestCase):
    valid_malware = json.loads(VALID_MALWARE)
    options = ValidationOptions(schema_dir=SCHEMA_DIR)

    def test_wellformed_malware(self):
        results = validate_string(VALID_MALWARE, self.options).schema_results
        self.assertTrue(results.is_valid)

    def test_vocab_malware_label(self):
        malware = dict(self.valid_malware)
        malware['labels'] += "something"
        malware = json.dumps(malware)
        results = validate_string(malware, self.options).schema_results
        self.assertEqual(results.is_valid, False)


if __name__ == "__main__":
    unittest.main()
